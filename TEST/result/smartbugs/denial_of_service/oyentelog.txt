scan DosAuction.sol, return 0
scan DosGas.sol, return 0
scan DosNumber.sol, return 0
scan DosOneFunc.sol, return 0
scan Government.sol, return 1
=================
log:
CRITICAL:root:solc output:

======= Government =======
Contract JSON ABI
[{"constant":true,"inputs":[],"name":"lastCreditorPayedOut","outputs":[{"name":"","type":"uint32"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"round","outputs":[{"name":"","type":"uint8"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"corruptElite","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"lastTimeOfNewCredit","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"nextGeneration","type":"address"}],"name":"inheritToNextGeneration","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"investInTheSystem","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"totalPayedOut","outputs":[{"name":"payout","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"profitFromCrash","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"getCreditorAmounts","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"creditorAddresses","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"getCreditorAddresses","outputs":[{"name":"","type":"address[]"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"buddy","type":"address"}],"name":"lendGovernmentMoney","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"creditorAmounts","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"totalDebt","outputs":[{"name":"debt","type":"uint256"}],"payable":false,"type":"function"},{"inputs":[],"type":"constructor"},{"payable":false,"type":"fallback"}]


CRITICAL:root:../solfile/Government.sol:37:14: Warning: Return value of low-level calls not used.
             msg.sender.send(amount);
             ^---------------------^
../solfile/Government.sol:39:14: Warning: Return value of low-level calls not used.
             creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash);
             ^-------------------------------------------------------------------^
../solfile/Government.sol:40:14: Warning: Return value of low-level calls not used.
             corruptElite.send(this.balance);
             ^-----------------------------^
../solfile/Government.sol:62:18: Warning: Return value of low-level calls not used.
                 corruptElite.send(amount * 5/100);
                 ^-------------------------------^
../solfile/Government.sol:70:22: Warning: Return value of low-level calls not used.
                     buddy.send(amount * 5/100);
                     ^------------------------^
../solfile/Government.sol:75:22: Warning: Return value of low-level calls not used.
                     creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]);
                     ^---------------------------------------------------------------------------------^
../solfile/Government.sol:82:18: Warning: Return value of low-level calls not used.
                 msg.sender.send(amount);
                 ^---------------------^

CRITICAL:root:Solidity compilation failed.
=================

scan Refunder.sol, return 1
=================
log:
CRITICAL:root:solc output:

CRITICAL:root:../solfile/Refunder.sol:15:16: Error: Expected identifier, got 'LParen'
    constructor() {
               ^

CRITICAL:root:Solidity compilation failed.
=================

